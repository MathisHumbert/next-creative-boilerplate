@use "sass:map";
@use "sass:list";

@use "./font-style" as *;
@use "./fonts" as *;
@use "./functions" as *;
@use "./mixins" as *;
@use "./reset" as *;
@use "./variables" as *;

@use "./components/index" as *;
@use "./layouts/index" as *;

:root {
  --breakpoints-desktop: #{map.get($breakpoints, "desktop")};
  --breakpoints-mobile: #{map.get($breakpoints, "mobile")};
  --sizes-desktop: #{map.get($sizes, "desktop")};
  --sizes-mobile: #{map.get($sizes, "mobile")};

  --grid-count: #{list.nth(map.get($grid, "count"), 1)};
  --grid-gutter: #{list.nth(map.get($grid, "gutter"), 1)};
  --grid-margin: #{list.nth(map.get($grid, "margin"), 1)};

  @each $name, $color in $colors {
    --#{$name}: #{$color};
  }

  @media (max-width: #{map.get($breakpoints, 'mobile')}px) {
    --grid-count: #{list.nth(map.get($grid, "count"), 2)};
    --grid-gutter: #{list.nth(map.get($grid, "gutter"), 2)};
    --grid-margin: #{list.nth(map.get($grid, "margin"), 2)};
  }
}

*,
*:after,
*:before {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: calc(100vw / $sizes-desktop * 10);
  font-family: $font-satoshi;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  background: $color-black;
  color: $color-white;
  pointer-events: none;

  &.visible {
    pointer-events: all;
  }

  @include mobile {
    font-size: calc(100vw / $sizes-mobile * 10);
  }
}

html,
body {
  margin: 0;
  width: 100%;
  height: 100%;
}

#scroll-wrapper {
  position: fixed;
  overflow-x: clip;
  overflow-y: hidden;
  height: 100vh;
  height: 100dvh;

  -ms-overflow-style: none;
  scrollbar-width: none;

  html.loaded & {
    position: relative;
    overflow-y: scroll;
  }

  &::-webkit-scrollbar {
    display: none;
  }
}

#scroll-content {
  position: relative;
}

main {
  position: relative;
  width: 100vw;
  height: 100%;
  z-index: z("content");
}

.page {
  position: relative;
  width: 100%;
  height: 100%;
  // opacity: 0;
  // transition: opacity 0.7s $ease-out;

  // html.loaded & {
  //   opacity: 1;
  // }
}

.image {
  @extend %cover;

  object-fit: cover;
  object-position: center;
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

canvas {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: z("canvas");
}

[data-animation="appear"] span {
  will-change: opacity, visibility;
}

[data-animation="text"] div div {
  will-change: transform;
}

[data-animation="title"] {
  overflow: clip;

  div {
    will-change: transform;
  }
}
